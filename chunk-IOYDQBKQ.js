import{a as u}from"./chunk-YWCK3PL2.js";import{a as m,b as c}from"./chunk-KXKIMWYL.js";import"./chunk-UWV4MYSW.js";import"./chunk-NIM2QCAE.js";import{Mb as a,Nb as n,Ob as e,Pb as o,Za as i,jb as s,nc as t,xc as d}from"./chunk-ZUNX335B.js";var g=()=>[10,10],p=class r{static \u0275fac=function(l){return new(l||r)};static \u0275cmp=s({type:r,selectors:[["app-me"]],decls:102,vars:26,consts:[[1,"hm-content","mb-2"],["nz-typography","",2,"text-align","center","color","black"],["nz-row","",3,"nzGutter"],["nz-col","","nzOrder","1",3,"nzXs","nzSm","nzMd","nzLg","nzXl","nzXXl"],["nz-typography","",1,"hm-content"],[2,"color","royalblue"],["nz-col","","nzOrder","2",3,"nzXs","nzSm","nzMd","nzLg","nzXl","nzXXl"]],template:function(l,f){l&1&&(n(0,"div",0)(1,"div")(2,"h1",1),t(3,"About me: Work Experience at FSS"),e()()(),n(4,"div",2)(5,"div",3)(6,"article",4)(7,"h3",5),t(8,"Implemented a real-time notification system"),e(),o(9,"hr"),n(10,"p")(11,"strong")(12,"em"),t(13,"Techstack:"),e()(),t(14," Angular, SpringBoot, WebSocket, Kafka, Mongodb."),e(),n(15,"h4"),t(16,"Overview"),e(),n(17,"ol")(18,"li"),t(19," Developed a real-time notification module that allows users to receive live updates and system alerts. "),e(),n(20,"li"),t(21," Integrated the notification module with another modules to trigger real time alerts based on user actions "),e(),n(22,"li"),t(23," Enabled automatic data refresh upon network reconnection by integrating a Spring "),e(),n(24,"li"),t(25," WebSocket server that actively listens to kafka messages and pushes realtime updates directly to the client. "),e(),n(26,"li"),t(27," Implemented unit test achieving approximately 80% coverage to ensure code quality and reliability. "),e()(),n(28,"h4"),t(29,"Notable or remarkable"),e(),n(30,"ol")(31,"li"),t(32,"Multi instance problem"),e(),n(33,"li"),t(34,"Note about kafka; notification have to satisfy two criteria like:"),e(),n(35,"li"),t(36,"Broadcast mode: In topic X: Each instance has a unique groupId because we want each time send message to topic X, all instance have to be received"),e(),n(37,"li"),t(38,"Share mode: In topic Y: All instance share the same groupId because we want each time send message to topic Y, only one instance was received"),e(),n(39,"li"),t(40,"To configurate this, it relates to the concept is kafkaListenerContainerFactory. We have config, each time subscribe to topic, I have to specific two params are topic name and groupId of instances"),e(),n(41,"li"),t(42,"In each usecase or bussincess, I have to think I should send boardcast or send share mode? "),e(),n(43,"li"),t(44,"Notification module acts as a bridge between client and server. Any module want to send message to client. It have to send message to notification by kafka. And notification module will boardcast message to all its instances before send to client to guarantee message delivery to all connected clients"),e(),n(45,"li"),t(46,"Understand clearly about short polling or long polling"),e(),n(47,"li"),t(48,"Short polling: client ask server frequently"),e(),n(49,"li"),t(50,"Long polling: client ask once and wait"),e()()()(),n(51,"div",6)(52,"article",4)(53,"h3",5),t(54,"Custom API Gateway Authorization and Role-Based UI Rendering"),e(),o(55,"hr"),n(56,"p")(57,"strong")(58,"em"),t(59,"Techstack:"),e()(),t(60," Lua, APISIX, Postgres, Angular, KendoUI, Kubernetes"),e(),n(61,"ol")(62,"li"),t(63,"Implemented fine-grained permission checks by querying the database functions using parameters such as username, API URL and HTTP method. The logic ensure that the user is authorized to access to service, have permission for the request function and is allowed to perform the specified action. Permissions are stored as bit flags, and the database function uses bitwise operations to quickly check if the user has all the necessary access rights. "),e(),n(64,"li"),t(65," Deployed customize Lua Auth Plugin to k8s."),e(),n(66,"li"),t(67,"Developed an API to load user context, including profile information, permission sets, and dynamic menu structure based on access rights. "),e()()()(),n(68,"div",6)(69,"article",4)(70,"h3",5),t(71,"About me in Angular"),e(),o(72,"hr"),n(73,"p")(74,"strong")(75,"em"),t(76,"Techstack:"),e()(),t(77," Angular, Kendo UI, Rxjs "),e(),n(78,"ol")(79,"li"),t(80,"Designed the Angular project layout and routing with Angular router to enable modular and lazy-loaded navigation. "),e(),n(81,"li"),t(82," Wrapped core Kendo UI controls to simplify developer usage, cutting development time and code volume by up to 90%."),e(),n(83,"li"),t(84,"Built the frontend authorization flow. Call API to fetch user context including profile, permissions, and menu tree. Managed permisison state on the client side. Developed Angular directives to dynamically show or hide component UI based on user access rights.. "),e()()()(),n(85,"div",6)(86,"article",4)(87,"h3",5),t(88,"Outsourcing for Bank"),e(),o(89,"hr"),n(90,"p")(91,"strong")(92,"em"),t(93,"Techstack:"),e()(),t(94," Angular, Micro-FE, GraphQL, Spring boot "),e(),n(95,"ol")(96,"li"),t(97,"Designed the Angular project layout and routing with Angular router to enable modular and lazy-loaded navigation. "),e(),n(98,"li"),t(99," Developed an independent micro frontend and integrated it into the shell application."),e(),n(100,"li"),t(101,"Developed the UI based on the client\u2019s framework and strictly followed the provided design specifications. "),e()()()()()),l&2&&(i(4),a("nzGutter",d(25,g)),i(),a("nzXs",24)("nzSm",24)("nzMd",24)("nzLg",24)("nzXl",24)("nzXXl",24),i(46),a("nzXs",24)("nzSm",24)("nzMd",24)("nzLg",24)("nzXl",24)("nzXXl",24),i(17),a("nzXs",24)("nzSm",24)("nzMd",24)("nzLg",24)("nzXl",24)("nzXXl",24),i(17),a("nzXs",24)("nzSm",24)("nzMd",24)("nzLg",24)("nzXl",24)("nzXXl",24))},dependencies:[u,m,c],styles:[".grid-config[_ngcontent-%COMP%]{height:120px;font-size:14px;line-height:120px;background:#0092ff;border-radius:4px}"]})};export{p as Me};
